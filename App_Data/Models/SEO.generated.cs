//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v8.1.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedModels
{
	// Mixin Content Type with alias "sEO"
	/// <summary>SEO</summary>
	public partial interface ISEO : IPublishedContent
	{
		/// <summary>Hide from search engines</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		bool HideFromSearchEngines { get; }

		/// <summary>Meta description</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		string MetaDescription { get; }

		/// <summary>Open Graph image</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		IPublishedContent OpenGraphImage { get; }

		/// <summary>Web page title</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		string PageTitle { get; }

		/// <summary>Sitemap XML change frequency</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		Options SitemapXmlchangeFrequency { get; }

		/// <summary>Sitemap XML priority</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		decimal SitemapXmlpriority { get; }

		/// <summary>Twitter creator username</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		object TwitterCreatorUsername { get; }

		/// <summary>Alternative URL</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		string UmbracoUrlAlias { get; }
	}

	/// <summary>SEO</summary>
	[PublishedModel("sEO")]
	public partial class SEO : PublishedContentModel, ISEO
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const string ModelTypeAlias = "sEO";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SEO, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public SEO(IPublishedContent content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// Hide from search engines: This will add a noindex meta tag to your page and exclude this page from your sitemap.xml
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("hideFromSearchEngines")]
		public bool HideFromSearchEngines => GetHideFromSearchEngines(this);

		/// <summary>Static getter for Hide from search engines</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static bool GetHideFromSearchEngines(ISEO that) => that.Value<bool>("hideFromSearchEngines");

		///<summary>
		/// Meta description: This is shown in search engines, when the page is shared via social media and in your sites own search results. Try to keep this below 155 characters.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription => GetMetaDescription(this);

		/// <summary>Static getter for Meta description</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static string GetMetaDescription(ISEO that) => that.Value<string>("metaDescription");

		///<summary>
		/// Open Graph image: The image used when someone shares the page on social media, such as, Twitter or Facebook.  We suggest that you use an image of at least 1200x630 pixels.  If nothing is uploaded here the "Default Open Graph image" from your "Global Settings" will be used.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("openGraphImage")]
		public IPublishedContent OpenGraphImage => GetOpenGraphImage(this);

		/// <summary>Static getter for Open Graph image</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static IPublishedContent GetOpenGraphImage(ISEO that) => that.Value<IPublishedContent>("openGraphImage");

		///<summary>
		/// Web page title: This is shown in search engines, web browsers and when the page is shared via social media. If left empty the default page title will be used.  The default page title will be a combination of the current page node name and the website name defined in "Global Settings".
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("pageTitle")]
		public string PageTitle => GetPageTitle(this);

		/// <summary>Static getter for Web page title</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static string GetPageTitle(ISEO that) => that.Value<string>("pageTitle");

		///<summary>
		/// Sitemap XML change frequency
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("sitemapXMLChangeFrequency")]
		public Options SitemapXmlchangeFrequency => GetSitemapXmlchangeFrequency(this);

		/// <summary>Static getter for Sitemap XML change frequency</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static Options GetSitemapXmlchangeFrequency(ISEO that) => that.Value<Options>("sitemapXMLChangeFrequency");

		///<summary>
		/// Sitemap XML priority
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("sitemapXMLPriority")]
		public decimal SitemapXmlpriority => GetSitemapXmlpriority(this);

		/// <summary>Static getter for Sitemap XML priority</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static decimal GetSitemapXmlpriority(ISEO that) => that.Value<decimal>("sitemapXMLPriority");

		///<summary>
		/// Twitter creator username: Username for the content creator/author used in the twitter card.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("twitterCreatorUsername")]
		public object TwitterCreatorUsername => GetTwitterCreatorUsername(this);

		/// <summary>Static getter for Twitter creator username</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static object GetTwitterCreatorUsername(ISEO that) => that.Value("twitterCreatorUsername");

		///<summary>
		/// Alternative URL: Use this field to provide multiple URLs for a content node.  For example if you were to enter "examplepage1,examplepage2/this-is-a-test", this would resolve the following URLs to the same page.  /examplepage1/ /examplepage2/this-is-a-test/  Please note that the values you use must be lowercase, not use a leading slash and not use a file extension.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias => GetUmbracoUrlAlias(this);

		/// <summary>Static getter for Alternative URL</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static string GetUmbracoUrlAlias(ISEO that) => that.Value<string>("umbracoUrlAlias");
	}
}
