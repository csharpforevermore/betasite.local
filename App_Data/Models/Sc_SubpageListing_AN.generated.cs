//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v8.1.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedModels
{
	/// <summary>Subpage Listing</summary>
	[PublishedModel("SC_SubpageListing_AN")]
	public partial class Sc_SubpageListing_AN : PublishedContentModel, IAdvancedPageSettings, IComponentIntroOutro
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const string ModelTypeAlias = "SC_SubpageListing_AN";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Sc_SubpageListing_AN, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public Sc_SubpageListing_AN(IPublishedContent content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// Animate
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("animate")]
		public bool Animate => this.Value<bool>("animate");

		///<summary>
		/// Image style
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("imageStyle")]
		public string ImageStyle => this.Value<string>("imageStyle");

		///<summary>
		/// Instructions: {div class="panel-heading"}{h3 class="panel-title"}Subpage listing{i class="icon sprTree icon-thumbnail-list color-orange pull-right"}{/i}{/h3}{/div}{div class="panel-body"}{p}The node name you enter above is for your reference only and will not appear on the website.{/p}{/div}
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("instructions")]
		public string Instructions => this.Value<string>("instructions");

		///<summary>
		/// Items per row
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("itemsPerRow")]
		public string ItemsPerRow => this.Value<string>("itemsPerRow");

		///<summary>
		/// Item text alignment
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("itemTextAlignment")]
		public Options ItemTextAlignment => this.Value<Options>("itemTextAlignment");

		///<summary>
		/// Link to listing: Link to internal pages that contain sub pages. Each page you select containing sub pages will be displayed along with a menu to switch between them.  If linking to a "Blog", either link to the "Blog Landing Page" or "Blog Category Page".  Links to external pages will be ignored.  The "Caption" field is used for the tab heading and link to each listing.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("linkToListing")]
		public IEnumerable<Umbraco.Web.Models.Link> LinkToListing => this.Value<IEnumerable<Umbraco.Web.Models.Link>>("linkToListing");

		///<summary>
		/// Listing layout
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("listingLayout")]
		public string ListingLayout => this.Value<string>("listingLayout");

		///<summary>
		/// Pages to display: If nothing is entered here all pages available will be listed.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("pagesToDisplay")]
		public int PagesToDisplay => this.Value<int>("pagesToDisplay");

		///<summary>
		/// Summary text character count: Enter the number of characters you would like displayed from the beginning of each page.  If summary text has been entered this will be used instead. Summary text must be entered on Advanced pages for this to be displayed. If nothing is entered, no summary text will be displayed.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("summaryTextCharacterCount")]
		public int SummaryTextCharacterCount => this.Value<int>("summaryTextCharacterCount");

		///<summary>
		/// Instructions: {div class="panel-body"}{p}These settings only apply if this component has been added to the "Homepage" or an "Advanced Page / Advanced Page Blog Post".{/p}{/div}
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("apsInstructions")]
		public string ApsInstructions => AdvancedPageSettings.GetApsInstructions(this);

		///<summary>
		/// Background Colour: Color selected will dictate the color to be used for any text.  If a background image is used, select the color that works best for the text over the image.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("backgroundColour")]
		public string BackgroundColour => AdvancedPageSettings.GetBackgroundColour(this);

		///<summary>
		/// Background image: No recommended image size. To cover the full area of the component use a large image. Use a small image to repeat.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("backgroundImage")]
		public IPublishedContent BackgroundImage => AdvancedPageSettings.GetBackgroundImage(this);

		///<summary>
		/// Background image options
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("backgroundImageOptions")]
		public Newtonsoft.Json.Linq.JToken BackgroundImageOptions => AdvancedPageSettings.GetBackgroundImageOptions(this);

		///<summary>
		/// Button color: Selects the colour of the button
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("buttonColor")]
		public string ButtonColor => AdvancedPageSettings.GetButtonColor(this);

		///<summary>
		/// Component width
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("width")]
		public Options Width => AdvancedPageSettings.GetWidth(this);

		///<summary>
		/// Heading: Your heading hierarchy is important for SEO. This will not affect font size.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("introductionHeading")]
		public string IntroductionHeading => ComponentIntroOutro.GetIntroductionHeading(this);

		///<summary>
		/// Links: The "Caption" field will be used for your link text.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("introductionLinks")]
		public IEnumerable<Umbraco.Web.Models.Link> IntroductionLinks => ComponentIntroOutro.GetIntroductionLinks(this);

		///<summary>
		/// Secondary heading
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("introductionSecondaryHeading")]
		public string IntroductionSecondaryHeading => ComponentIntroOutro.GetIntroductionSecondaryHeading(this);

		///<summary>
		/// Text
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("introductionText")]
		public IHtmlString IntroductionText => ComponentIntroOutro.GetIntroductionText(this);

		///<summary>
		/// Text alignment
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("introductionTextAlignment")]
		public Options IntroductionTextAlignment => ComponentIntroOutro.GetIntroductionTextAlignment(this);

		///<summary>
		/// Heading: Your heading hierarchy is important for SEO. This will not affect font size.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("outroHeading")]
		public Newtonsoft.Json.Linq.JToken OutroHeading => ComponentIntroOutro.GetOutroHeading(this);

		///<summary>
		/// Links: The "Caption" field will be used for your link text.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("outroLinks")]
		public IEnumerable<Umbraco.Web.Models.Link> OutroLinks => ComponentIntroOutro.GetOutroLinks(this);

		///<summary>
		/// Secondary heading
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("outroSecondaryHeading")]
		public string OutroSecondaryHeading => ComponentIntroOutro.GetOutroSecondaryHeading(this);

		///<summary>
		/// Text
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("outroText")]
		public IHtmlString OutroText => ComponentIntroOutro.GetOutroText(this);

		///<summary>
		/// Text alignment
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder", "8.1.0")]
		[ImplementPropertyType("outroTextAlignment")]
		public Options OutroTextAlignment => ComponentIntroOutro.GetOutroTextAlignment(this);
	}
}
