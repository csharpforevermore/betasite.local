@inherits UmbracoViewPage

@{
    string anchorId = String.Empty;
    string customComponentClasses = String.Empty;

    TemplateStyleSettings settings;
    string animateClass = String.Empty;

    if (Model.Animate)
    {
        animateClass = "os-animation";
    }

    string pageType = ViewData["pageType"] != null ? ViewData["pageType"].ToString() : "standard";

    if (pageType == "standard")
    {
        settings = ViewTemplateHelper.GetDefaultTemplateStyleSettings();
    }
    else
    {
        settings = ViewTemplateHelper.GetTemplateStyleSettings(Model.BackgroundColor, Model.ButtonColor);
    }

    @* Add div for column width on Advanced Pages *@
    if (pageType == "advanced")
    {
        if (Model.Width == Options.ComponentWidth_Center)
        {
            @:<div class="container"><div class="row"><div class="mid-col col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 col-xs-12">
        }
        else if(Model.Width == USNOptions.ComponentWidth_Full)
        {
            @:<div class="container-fluid"><div class="row"><div class="wide-col col-xs-12">
        }
        else
        {
            @:<div class="container"><div class="row"><div class="wide-col col-xs-12">
        }  
    }
    else
    {
        anchorId = "id=\"pos_" + Model.Id + "\" ";
        customComponentClasses = Model.CustomComponentClasses;
    }

	<!-- PAGE COMPONENT RESOURCES -->
    <div class="spc resources @animateClass @customComponentClasses" data-os-animation="fadeIn" data-os-animation-delay="0s" @Html.Raw(anchorId)>

        @Html.Partial("USNMiscPageElements/USN_ComponentIntro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animateClass", animateClass }, { "headingStyle", settings.HeadingStyle }, { "secondaryHeadingStyle", settings.SecondaryHeadingStyle }, { "textStyle", settings.TextStyle }, { "buttonStyle", settings.ButtonStyle } })

        @if (Model.Resources != null)
        {
            <div class="list-group">
                @foreach (Usn_Sc_ResourceItem item in Model.Resources)
                {
                    string note = String.Empty;
                    string iconClass = String.Empty;
                    bool fileError = false;

                    USNLink attachement = USNUrlHelper.GetLinkFromRelatedLinks(item.Link);

                    if (attachement != null)
                    {
                        switch (attachement.LinkType)
                        {
                            case USNLink.UrlPickerTypes.Url:
                                iconClass = "ion-android-open pull-right after c1-text";
                                note = Umbraco.GetDictionaryValue("USN Resources Component External Web Link") + " - " + attachement.LinkURL;
                                break;
                            case USNLink.UrlPickerTypes.Content:
                                iconClass = "ion-link pull-right after c1-text";
                                break;
                            case USNLink.UrlPickerTypes.Media:
                                iconClass = "ion-android-arrow-down pull-right after c1-text";
                                string fullPathU = Server.MapPath(attachement.LinkURL);
                                try
                                {
                                    FileInfo finfoU = new FileInfo(fullPathU);
                                    long fileInMbu = finfoU.Length / 1024;

                                    string fileSizeU = fileInMbu + "KB";
                                    note = Umbraco.GetDictionaryValue("USN Resources Component File Size") + ": " + fileSizeU;
                                }
                                catch (Exception e)
                                {
                                    fileError = true;
                                }
                                break;
                        }
                        if (!fileError)
                        {
                            <a href="@attachement.LinkURL" @Html.Raw(attachement.LinkTitle) @Html.Raw(attachement.LinkTarget) class="item list-group-item c1-text">
                                <p class="heading c1-text">@attachement.LinkCaption<i class="@iconClass"></i></p>

                                @if (item.OptionalAdditionalInformation.HasValue())
                                {
                                    <div class="text base-text">@Html.Raw(item.OptionalAdditionalInformation)</div>
                                }

                                @if (note != String.Empty)
                                {
                                    <div class="size base-text">@note</div>
                                }
                            </a>
                        }
                    }
                }
            </div>

        }

        @Html.Partial("USNMiscPageElements/USN_ComponentOutro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animateClass", animateClass }, { "headingStyle", settings.HeadingStyle }, { "secondaryHeadingStyle", settings.SecondaryHeadingStyle }, { "textStyle", settings.TextStyle }, { "buttonStyle", settings.ButtonStyle } })

    </div>

    @* Close div for column width on Advanced Pages *@
    if (!Model.Parent.Parent.IsDocumentType(UsnstandardPage.ModelTypeAlias) && !Model.Parent.Parent.IsDocumentType(StandardPageBlogPost.ModelTypeAlias))
    {
        @:</div></div></div>
    }
	<!--// PAGE COMPONENT RESOURCES -->
}